using Toybox.WatchUi as Ui;
using Toybox.Graphics as Gfx;
using Toybox.FitContributor as Fit;

class DF_EPOCView extends Ui.DataField
{

	var Device_Type;
	var Max_HR;

	// History:
	//
	// 23/12/2018 - US = 0.10850 / DS = 0.1390
	// 30/12/2018 - US = 0.10850 / DS = 0.1200
	//

	var UpSlopePercent = 0.10850;
	
	// DownSlope
	var c = 1.12;
	//var DownSlopePercent = 0.1200;
	//var DownSlopePerSec = 1 / Math.pow(c,1.0/60);
	
	var Use_Garmin_Training_Zones = false;
	
	// Layout Fields

    var DF_Title_Value = "EPOC";
	var DF_Title_x = 0;
	var DF_Title_y = 0;
	var DF_Title_font = Gfx.FONT_XTINY;

    var MaxHR_Title_Value = "Max HR:";
	var MaxHR_Title_x = 0;
	var MaxHR_Title_y = 0;
	var MaxHR_Title_font = Gfx.FONT_XTINY;

    var MaxHR_Value = 0;
	var MaxHR_Value_x = 0;
	var MaxHR_Value_y = 0;
	var MaxHR_Value_font = Gfx.FONT_XTINY;

    var EPOC_Value = 0;
	var EPOC_Value_x = 0;
	var EPOC_Value_y = 0;
	var EPOC_Value_font = Gfx.FONT_XTINY;

	var EPOC_Field;
	const EPOC_Field_id = 0;

    var MaxEPOC_Title_Value = "Max:";
	var MaxEPOC_Title_x = 0;
	var MaxEPOC_Title_y = 0;
	var MaxEPOC_Title_font = Gfx.FONT_XTINY;

    var MaxEPOC_Value = 0;
	var MaxEPOC_Value_x = 0;
	var MaxEPOC_Value_y = 0;
	var MaxEPOC_Value_font = Gfx.FONT_XTINY;


    function initialize(Args)
    {
        DataField.initialize();

		Use_Garmin_Training_Zones = Args[0];
        Max_HR = Args[1];
        		
	    Device_Type = Ui.loadResource(Rez.Strings.Device);
		System.println("Device_Type = " + Device_Type);

        var Sport = UserProfile.getCurrentSport();
        var Profile = UserProfile.getProfile();
		var Garmin_HR_Zones_Array = UserProfile.getHeartRateZones(Sport);
		
		System.println("Sport = " + Sport);
		System.println("activityClass = " + Profile.activityClass);
        System.println("HeartRateZones = " + Garmin_HR_Zones_Array);

		if (Use_Garmin_Training_Zones)
		{
        	Max_HR = Garmin_HR_Zones_Array[Garmin_HR_Zones_Array.size()-1];
		}
        
        System.println("Max_HR = " + Max_HR);


		MaxHR_Value = Max_HR;

		switch (Device_Type)
		{
			case "edge_1030":

				DF_Title_x = 1;
				DF_Title_y = 1;
				DF_Title_font = Gfx.FONT_XTINY;

				MaxHR_Title_x = 40;
				MaxHR_Title_y = 1;
				MaxHR_Title_font = Gfx.FONT_XTINY;

				MaxHR_Value_x = 110;
				MaxHR_Value_y = 1;
				MaxHR_Value_font = Gfx.FONT_XTINY;
 
				MaxEPOC_Title_x = 25;
				MaxEPOC_Title_y = 15;
				MaxEPOC_Title_font = Gfx.FONT_XTINY;

				MaxEPOC_Value_x = 140;
				MaxEPOC_Value_y = 15;
				MaxEPOC_Value_font = Gfx.FONT_NUMBER_MILD;

				EPOC_Value_x = 140;
				EPOC_Value_y = 52;
				//EPOC_Value_font = Gfx.FONT_NUMBER_THAI_HOT;
				//EPOC_Value_font = Gfx.FONT_NUMBER_HOT;
				EPOC_Value_font = Gfx.FONT_NUMBER_MEDIUM;
				
				break;

			case "fr935":

				DF_Title_x = 100;
				DF_Title_y = 1;
				DF_Title_font = Gfx.FONT_XTINY;

				MaxHR_Title_x = 15;
				MaxHR_Title_y = 60;
				MaxHR_Title_font = Gfx.FONT_XTINY;

				MaxHR_Value_x = 40;
				MaxHR_Value_y = 80;
				MaxHR_Value_font = Gfx.FONT_XTINY;
 
				MaxEPOC_Title_x = 90;
				MaxEPOC_Title_y = 22;
				MaxEPOC_Title_font = Gfx.FONT_XTINY;

				MaxEPOC_Value_x = 190;
				MaxEPOC_Value_y = 27;
				MaxEPOC_Value_font = Gfx.FONT_NUMBER_MILD;

				EPOC_Value_x = 220;
				EPOC_Value_y = 60;
				//EPOC_Value_font = Gfx.FONT_NUMBER_THAI_HOT;
				//EPOC_Value_font = Gfx.FONT_NUMBER_HOT;
				EPOC_Value_font = Gfx.FONT_NUMBER_MEDIUM;
				
				break;

			default:
				break;
		}

		EPOC_Field = createField("EPOC", EPOC_Field_id, FitContributor.DATA_TYPE_FLOAT, { :mesgType=>Fit.MESG_TYPE_RECORD, :units=>"ml/kg" });
    }

    // Set your layout here. Anytime the size of obscurity of
    // the draw context is changed this will be called.
    function onLayout(dc)
    {
    	System.println("DC Height  = " + dc.getHeight());
      	System.println("DC Width  = " + dc.getWidth());
        View.setLayout(Rez.Layouts.MainLayout(dc));
        return true;
    }

    // The given info object contains all the current workout information.
    // Calculate a value and save it locally in this method.
    // Note that compute() and onUpdate() are asynchronous, and there is no
    // guarantee that compute() will be called before onUpdate().
    function compute(info)
    {
		if (info.currentHeartRate != null)
		{
			var heartrate = info.currentHeartRate;
			var intensity = pVO2(heartrate);
			var deltaEPOCperSec = deltaEPOCperSec(intensity, EPOC_Value);
			EPOC_Value += deltaEPOCperSec;
			if (EPOC_Value > MaxEPOC_Value)
			{
				MaxEPOC_Value = EPOC_Value;
			}
			EPOC_Field.setData(EPOC_Value.toFloat());
			System.println("heartrate = " + heartrate + " - intensity = " + intensity + " - deltaEPOCperSec = " + deltaEPOCperSec + " - EPOC_Value = " + EPOC_Value);
		}
    }

    // Display the value you computed here. This will be called
    // once a second when the data field is visible.
    function onUpdate(dc)
    {
        // Set the background color
        View.findDrawableById("Background").setColor(getBackgroundColor());

		var FontDisplayColor = Gfx.COLOR_BLACK;

        if (getBackgroundColor() == Gfx.COLOR_BLACK)
        {
            FontDisplayColor = Gfx.COLOR_WHITE;
        }
        else
        {
            FontDisplayColor = Gfx.COLOR_BLACK;
        }


        // Call parent's onUpdate(dc) to redraw the layout
        View.onUpdate(dc);

		textL(dc, DF_Title_x, DF_Title_y, DF_Title_font, FontDisplayColor, DF_Title_Value);
		textL(dc, MaxHR_Title_x, MaxHR_Title_y, MaxHR_Title_font, FontDisplayColor, MaxHR_Title_Value);
		textR(dc, MaxHR_Value_x, MaxHR_Value_y, MaxHR_Value_font, FontDisplayColor, MaxHR_Value);

		textR(dc, MaxEPOC_Title_x, MaxEPOC_Title_y, MaxEPOC_Title_font, FontDisplayColor, MaxEPOC_Title_Value);
		textR(dc, MaxEPOC_Value_x, MaxEPOC_Value_y, MaxEPOC_Value_font, FontDisplayColor, MaxEPOC_Value.format("%.2f").toString());
		
		textR(dc, EPOC_Value_x, EPOC_Value_y, EPOC_Value_font, FontDisplayColor, EPOC_Value.format("%.2f").toString());
		
    }

	function textR(dc, x, y, font, color, s)
	{
		if (s != null)
		{
			dc.setColor(color, Gfx.COLOR_TRANSPARENT);
			//dc.drawText(x, y, font, s, Graphics.TEXT_JUSTIFY_RIGHT|Graphics.TEXT_JUSTIFY_VCENTER);
			dc.drawText(x, y, font, s, Graphics.TEXT_JUSTIFY_RIGHT);
		}
	}

	function textL(dc, x, y, font, color, s)
	{
		if (s != null)
		{
			dc.setColor(color, Gfx.COLOR_TRANSPARENT);
			//dc.drawText(x, y, font, s, Graphics.TEXT_JUSTIFY_LEFT|Graphics.TEXT_JUSTIFY_VCENTER);
			dc.drawText(x, y, font, s, Graphics.TEXT_JUSTIFY_LEFT);
		}
	}

	function pVO2(HR)
	   {
		   var pHR =  HR.toFloat() / Max_HR;
		   System.println("pHR = " + pHR);
		   var pVO2 = 1.459 * pHR * pHR - 0.49 * pHR + 0.04;
		   if (pVO2 < 0)
		   {
		   	pVO2 = 0;
		   }
		   System.println("pVO2 = " + pVO2);
		   return (pVO2);
	   }


	   function EPOC_UpSlope(time,intensity)
	   {
			var UpSlope = 0;
			//var EPOC_UpSlope_Array = [0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.02,0.01,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,-0.01,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.01,0.00,-0.01,0.00,0.00,0.00,0.00,0.01,0.00,0.00,0.00,0.00,-0.01,-0.01,-0.01,0.00,0.00,-0.01,0.00,0.00,0.00,0.01,0.00,0.01,0.01,0.01,0.01,0.01,0.00,0.01,0.01,0.01,0.01,0.01,0.01,0.00,0.00,0.01,0.00,0.01,0.00,0.00,0.00,0.00,0.01,0.00,0.00,0.00,0.01,0.00,0.01,0.00,0.01,0.01,0.01,0.01,0.01,0.01,0.02,0.01,0.01,0.00,0.01,0.00,0.01,0.02,0.01,0.00,0.00,0.00,0.00,0.01,0.01,0.00,0.00,0.00,0.00,0.00,0.01,0.01,0.00,0.01,0.01,0.00,0.00,0.01,0.01,0.00,0.00,0.00,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.02,0.01,0.01,0.02,0.01,0.01,0.00,0.00,0.00,0.00,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.02,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.02,0.01,0.01,0.01,0.02,0.02,0.02,0.02,0.01,0.00,0.01,0.01,0.00,0.00,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.00,0.01,0.01,0.01,0.01,0.00,0.00,0.00,0.00,0.01,0.01,0.01,0.01,0.02,0.01,0.02,0.02,0.02,0.02,0.02,0.02,0.02,0.02,0.03,0.01,0.02,0.02,0.00,0.00,0.00,0.01,0.01,-0.01,-0.01,0.00,0.00,0.00,-0.01,-0.02,0.00,0.00,0.01,0.01,0.01,0.01,0.01,0.02,0.02,0.04,0.02,0.02,0.02,0.03,0.02,0.03,0.04,0.03,0.03,0.04,0.03,0.03,0.02,0.02,0.02,0.02,0.02,0.03,0.03,0.01,0.00,0.00,0.02,0.02,0.02,0.01,0.02,0.03,0.02,0.03,0.02,0.03,0.03,0.03,0.06,0.06,0.05,0.05,0.06,0.04,0.04,0.04,0.00,0.01,0.00,0.02,0.02,0.02,0.03,0.03,0.02,0.01,0.01,0.04,0.04,0.01,0.03,0.03,0.03,-0.01,0.02,0.01,0.01,0.04,0.05,0.05,0.05,0.05,0.06,0.08,0.06,0.06,0.07,0.07,0.07,-0.02,-0.10,-0.10,-0.08,-0.04,-0.08,-0.03,0.01,0.02,0.05,0.01,0.06,0.04,0.02,0.00,-0.03,-0.02,-0.02,-0.03,-0.03,0.00,0.01,0.03,0.00,0.04,0.01,0.01,0.05,0.06,0.11,0.11,0.11,0.07,0.05,0.08,0.05,0.06,0.06,0.04,0.03,0.11,0.08,0.10,0.01,0.07,0.07,0.07,0.05,0.05,0.07,0.06,0.06,0.06,0.09,0.10,0.12,0.12,0.11,0.11,0.12,0.14,0.15,0.13,0.11,0.13,0.12,0.12,0.12,0.15,0.16,0.17,0.15,0.14,0.15,0.13,0.15,0.18,0.15,0.12,0.17,0.17,0.19,0.20,0.21,0.24,0.22,0.22,0.27,0.17,0.21,0.16,0.11,0.20,0.19,0.17,0.10,0.11,0.13,0.18,0.18,0.18,0.19,0.21,0.23,0.25,0.27,0.26,0.27,0.31,0.29,0.27,0.28,0.28,0.28,0.26,0.28,0.25,0.26,0.26,0.31,0.32,0.34,0.33,0.28,0.25,0.29,0.32,0.31,0.32,0.34,0.35,0.35,0.34,0.34,0.34,0.34,0.37,0.40,0.40,0.39,0.40,0.39,0.38,0.41,0.44,0.42,0.43,0.41,0.43,0.46,0.46,0.48,0.46,0.43,0.42,0.41,0.42,0.42,0.46,0.48,0.49,0.56,0.48,0.48,0.49,0.47,0.50,0.58,0.63,0.57,0.50,0.55,0.58,0.58,0.50,0.55,0.41,0.48,0.51,0.53,0.47,0.48,0.50,0.56,0.54,0.55,0.58,0.60,0.56,0.60,0.64,0.64,0.63,0.58,0.57,0.60,0.60,0.69,0.68,0.69,0.68,0.66,0.64,0.71,0.63,0.66,0.61,0.55,0.68,0.63,0.60,0.64,0.66,0.64,0.58,0.62,0.62,0.68,0.86,0.71,0.79,0.90,0.87,0.95,0.82,0.77,0.84,0.90,0.78,0.77,0.73,0.81,0.78,0.80,0.78,0.86,0.82,0.83,0.87,0.84,0.90,0.83,0.93,0.92,0.83,0.82,0.88,0.96,0.91,1.03,1.13,1.12,1.03,0.81,0.84,0.87,0.89,0.91,0.90,0.90,0.98,0.89,0.93,0.94,0.98,0.99,1.09,1.18,1.11,1.03,1.19,1.16,1.06,1.12,1.10,1.15,1.19,1.20,1.32,1.27,1.32,1.29,1.33,1.35,1.30,1.21,1.19,1.22,1.24,1.26,1.33,1.32,1.29,1.37,1.34,1.38,1.36,1.33,1.39,1.29,1.29,1.28,1.29,1.33,1.33,1.36,1.38,1.39,1.61,1.62,1.59,1.54,1.46,1.49,1.49,1.57,1.56,1.69,1.76,1.80,1.77,1.76,1.85,1.89,1.81,1.84,1.88,1.87,1.90,1.91,1.82,1.76,1.75,1.96,1.87,1.90,1.76,1.84,1.95,2.07,2.12,2.05,2.06,2.07,2.10,2.18,2.21,2.21,2.21,2.22,2.14,2.05,2.09,2.14,2.18,2.22,2.29,2.22,2.23,2.06,2.06,2.18,2.27,2.20,2.34,2.30,2.39,2.40,2.32,2.37,2.40,2.37,2.47,2.57,2.53,2.40,2.39,2.43,2.47,2.47,2.60,2.67,2.68,2.71,2.71,2.75,2.72,2.65,2.68,2.76,2.80,2.77,2.79,2.91,2.97,2.63,2.80,2.84,2.86,2.88,2.88,2.96,3.00,3.10,3.11,3.21,3.19,2.92,2.92,3.23,3.23,3.20,3.23,3.22,3.27,3.40,3.34,3.26,3.25,3.31,3.36,3.45,3.50,3.46,3.40,2.86,2.76,2.81,3.39,3.61,3.66,3.70,3.57,3.65,3.58,2.73,2.80,3.06,3.17,3.20,3.37,3.50,3.31,3.27,3.25,3.30,3.41,3.33,3.38,3.51,3.64,3.67,3.70,3.64,3.77,3.66,3.73,3.76,3.90,3.93,3.99,3.97,3.91,3.91,4.04,4.05,4.13,4.25,4.31,4.38,4.33,4.30,4.20,4.29,4.25,4.26,4.27,4.73,4.72,4.75,4.76,4.78,4.91,4.87,4.82,5.06,5.01,5.07,5.12,5.11,5.11,5.23,5.29,5.33,5.28,5.28,5.37,5.51,5.57,5.65,5.64,5.76,5.73,5.73,5.76,5.87,5.99,5.92,6.00,6.10,6.18,6.21,6.18,6.28,6.31,6.33,6.46,6.57,6.59,6.62,6.65,6.81,6.79,6.75,6.76,6.77,6.79,6.80,7.38,7.44,7.36,7.38,7.45,7.45,7.53,7.54,7.58,7.64,7.65,7.78,7.78,7.73,7.92,7.86,7.90,7.93,7.84,7.87,8.04,8.30,8.21,8.49,8.59,8.57,8.64,8.60,8.78,8.81,8.86,8.89,9.02,8.98,9.11,9.17,9.18,9.26,9.23,9.32,9.27,9.41,9.24,9.22,9.26,9.29,9.46,9.55,9.71,9.85,10.05,10.05,10.11,10.14,10.09,10.17,10.27,10.29,10.36,10.48,10.98,10.81,11.15,11.26,11.08,11.23,11.24,11.18,11.14,11.31,12.19,11.80,12.51,12.71,12.37,12.60,12.50,12.33,12.15,12.47,13.88,13.19,14.40,14.73,14.18,14.53,14.27,13.95,13.57,14.09];
			//var EPOC_UpSlope_Array = [0.00,0.00,0.00,0.00,0.01,0.01,0.01,0.01,0.01,0.02,0.02,0.02,0.02,0.02,0.02,0.02,0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.04,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.08,0.09,0.10,0.10,0.10,0.10,0.10,0.10,0.10,0.10,0.10,0.10,0.10,0.10,0.10,0.10,0.10,0.10,0.10,0.10,0.10,0.10,0.10,0.10,0.10,0.10,0.10,0.10,0.10,0.10,0.10,0.10,0.10,0.10,0.10,0.10,0.10,0.10,0.10,0.10,0.10,0.10,0.10,0.10,0.10,0.10,0.10,0.10,0.10,0.10,0.10,0.10,0.10,0.10,0.10,0.10,0.10,0.10,0.10,0.10,0.11,0.11,0.11,0.11,0.11,0.11,0.11,0.11,0.11,0.11,0.11,0.11,0.11,0.11,0.11,0.11,0.12,0.12,0.12,0.12,0.12,0.12,0.12,0.12,0.12,0.12,0.12,0.12,0.12,0.12,0.12,0.12,0.12,0.12,0.12,0.12,0.12,0.12,0.12,0.12,0.12,0.12,0.12,0.12,0.12,0.12,0.12,0.12,0.12,0.12,0.12,0.12,0.12,0.12,0.12,0.12,0.12,0.12,0.12,0.12,0.12,0.12,0.12,0.12,0.12,0.12,0.12,0.13,0.13,0.13,0.13,0.13,0.17,0.17,0.17,0.17,0.17,0.17,0.17,0.17,0.17,0.17,0.17,0.17,0.17,0.17,0.17,0.17,0.17,0.17,0.17,0.17,0.17,0.17,0.17,0.17,0.17,0.17,0.17,0.17,0.17,0.17,0.17,0.17,0.17,0.17,0.17,0.17,0.17,0.17,0.17,0.18,0.18,0.22,0.22,0.22,0.22,0.22,0.22,0.22,0.22,0.22,0.22,0.22,0.22,0.22,0.22,0.22,0.22,0.22,0.22,0.22,0.22,0.22,0.22,0.22,0.22,0.22,0.22,0.22,0.23,0.25,0.26,0.26,0.26,0.26,0.26,0.26,0.26,0.27,0.27,0.27,0.28,0.28,0.29,0.29,0.29,0.29,0.29,0.30,0.30,0.30,0.30,0.30,0.30,0.30,0.30,0.30,0.30,0.30,0.30,0.30,0.30,0.30,0.30,0.30,0.30,0.30,0.30,0.30,0.30,0.30,0.30,0.30,0.30,0.30,0.32,0.37,0.37,0.37,0.37,0.37,0.37,0.40,0.40,0.43,0.43,0.52,0.52,0.53,0.53,0.54,0.55,0.62,0.73,0.75,0.75,0.75,0.75,0.75,0.75,0.75,0.75,0.75,0.75,0.75,0.75,0.75,0.75,0.75,0.75,0.75,0.75,0.75,0.75,0.75,0.75,0.75,0.75,0.75,0.75,0.75,0.75,0.75,0.75,0.75,0.75,0.75,0.75,0.75,0.75,0.75,0.75,0.75,0.75,0.75,0.75,0.75,0.75,0.75,0.77,0.77,0.81,0.81,0.85,0.85,0.85,0.85,0.85,0.85,0.85,0.85,0.85,0.99,1.03,1.03,1.03,1.19,1.20,1.20,1.22,1.23,1.28,1.28,1.28,1.28,1.28,1.28,1.28,1.28,1.28,1.28,1.28,1.28,1.28,1.28,1.28,1.28,1.28,1.28,1.28,1.28,1.28,1.28,1.28,1.28,1.28,1.28,1.28,1.28,1.28,1.28,1.28,1.28,1.28,1.28,1.28,1.28,1.28,1.28,1.28,1.28,1.28,1.28,1.28,1.28,1.28,1.28,1.28,1.28,1.28,1.28,1.28,1.28,1.29,1.51,1.51,1.52,1.56,1.56,1.57,1.57,1.57,1.57,1.57,1.59,1.59,1.68,1.72,1.72,1.72,1.72,1.72,1.72,1.72,1.72,1.72,1.72,1.74,1.74,1.75,1.81,1.81,1.81,1.81,1.81,1.81,1.82,1.99,2.15,2.16,2.16,2.23,2.23,2.23,2.23,2.23,2.23,2.25,2.26,2.42,2.42,2.42,2.42,2.42,2.42,2.42,2.42,2.42,2.42,2.45,2.46,2.46,2.46,2.51,2.52,2.52,2.52,2.52,2.52,2.52,2.53,2.53,2.53,2.53,2.53,2.53,2.53,2.53,2.53,2.53,2.53,2.53,2.53,2.53,2.58,2.58,2.64,2.64,2.64,2.64,2.64,2.64,2.64,2.64,2.64,2.64,2.64,2.66,2.66,2.73,2.80,2.81,2.81,2.82,2.82,2.88,2.88,2.97,2.97,2.97,2.97,2.97,2.99,2.99,2.99,2.99,2.99,3.01,3.02,3.20,3.20,3.22,3.22,3.27,3.27,3.27,3.27,3.27,3.31,3.38,3.40,3.40,3.40,3.42,3.42,3.44,3.44,3.44,3.44,3.44,3.44,3.44,3.47,3.47,3.48,3.49,3.49,3.57,3.57,3.57,3.57,3.57,3.57,3.59,3.61,3.63,3.65,3.65,3.65,3.70,3.71,3.71,3.71,3.71,3.71,3.71,3.82,3.90,3.90,3.90,3.90,3.97,3.97,3.97,3.97,3.97,3.97,3.99,3.99,3.99,4.06,4.11,4.11,4.11,4.13,4.13,4.13,4.13,4.13,4.15,4.15,4.15,4.21,4.22,4.23,4.23,4.25,4.26,4.26,4.26,4.26,4.26,4.27,4.27,4.27,4.30,4.30,4.30,4.30,4.30,4.30,4.30,4.30,4.30,4.30,4.31,4.32,4.45,4.45,4.45,4.45,4.49,4.53,4.53,4.53,4.53,4.53,4.53,4.58,4.58,4.60,4.60,4.60,4.60,4.60,4.66,4.66,4.66,4.66,4.66,4.68,4.78,4.80,4.80,4.80,4.83,4.83,4.83,4.83,4.83,4.83,4.83,4.83,4.83,4.83,4.83,4.83,4.83,4.83,4.83,4.83,4.83,4.83,4.83,4.83,4.83,4.83,4.83,4.83,4.83,4.83,4.83,4.83,4.91,5.00,5.01,5.02,5.02,5.02,5.02,5.02,5.18,5.29,5.31,5.37,5.37,5.42,5.42,5.42,5.42,5.42,5.42,5.43,5.43,5.48,5.48,5.48,5.58,5.58,5.58,5.83,5.83,5.83,5.83,5.83,5.83,5.83,5.88,5.88,5.96,5.98,5.98,5.98,5.98,5.98,5.98,5.98,5.98,5.98,5.98,5.98,5.98,5.98,5.98,5.98,5.98,5.98,5.98,5.98,5.98,5.98,5.98,5.98,5.98,6.05,6.48,6.50,6.52,6.52,6.52,6.60,6.60,6.65,6.65,6.65,6.65,6.65,6.65,6.65,6.65,6.65,6.65,6.65,6.67,6.67,6.74,7.02,7.02,7.02,7.02,7.02,7.02,7.08,7.34,7.37,7.37,7.37,7.37,7.37,7.37,7.37,7.37,7.37,7.37,7.37,7.37,7.37,7.37,7.37,7.38,7.43,7.44,7.44,7.44,7.44,7.44,7.44,7.44,7.44,7.44,7.44,7.44,7.44,7.44,7.44,7.44,7.44,7.53,7.53,7.63,7.65,7.65,7.65,7.65,7.65,7.65,7.65,8.76,8.79,8.79,8.79,8.79,8.79,8.79,8.79,8.79,8.79,8.79,8.79,8.79,8.79,8.79,8.79,8.79,8.79,8.79,8.79,8.79,8.79,8.79,8.79,8.79,8.79,8.79,8.79,8.88,8.91,9.42,9.42,9.49,9.50,9.50,9.50,9.50,9.50,9.50,9.64,9.64,9.64,9.64,9.64,9.64,9.64,9.64,9.64,9.64,9.64,9.64,9.64];
			//var EPOC_UpSlope_Array

			if (intensity < 0)
			{
				UpSlope = 0;
			}
			else
			{
				UpSlope = UpSlopePercent * intensity * 100 * time.toFloat() / 60;
				System.println("UpSlope = " + UpSlope);
			}
/*
			if (intensity < 1)
			{
				//var index = Math.floor(intensity * 1000).format("%d").toNumber();
				//System.println(" EPOC_UpSlope - intensity = " + intensity + " - index = " + index);
				//UpSlope = EPOC_UpSlope_Array[index];



		   		System.println("UpSlope = " + UpSlope);
		   }
		   else
		   {
			   UpSlope = EPOC_UpSlope_Array[1000];
		   }
*/
			return (UpSlope);
	   }

	function EPOC_DownSlope(time)
	{
		var DownSlope = 1 / Math.pow(c,time.toFloat()/60);
		System.println("DownSlope - time = " + time + " - " + DownSlope);
		return (DownSlope);
	}
/*
	function EPOC_DownSlopePercent(intensity)
	   {

		   System.println("DownSlopePercent = " + DownSlopePercent);
		   return (DownSlopePercent);
	   }
*/
	   function zmf(intensity)
	   {
		   var zmf = 0;
		   if (intensity <= 0)
		   {
			   zmf = 1;
		   }
		   else
		   if ((intensity > 0) && (intensity <= 0.5))
		   {
			   zmf = 1 - 2 * Math.pow(intensity,2);
		   }
		   else
		   {
			   zmf = 2 * Math.pow((1 - intensity), 2);
		   }
		   System.println("zmf = " + zmf);
		   return (zmf);
	   }

	   function y1(time, intensity, oldEPOC)
	   {
		   //var newEPOC = - EPOC_DownSlopePercent(intensity) * oldEPOC;
		   var y1 = - (1 - EPOC_DownSlope(time)) * oldEPOC;
		   System.println("y1 = " + y1);
		   return(y1);
	   }	   

	   function y2(time, intensity, oldEPOC)
	   {
		   var newEPOC = (1 - zmf(intensity)) * EPOC_UpSlope(time, intensity) + zmf(intensity) * y1(time, intensity,oldEPOC);
		   var y2 = newEPOC;
		   System.println("y2 = " + y2);
		   return(y2);
	   }	   
/*
	function deltaEPOCperMin(intensity, oldEPOC)
	{
		   var deltaEPOCperMin;
		   var y1 = y1(intensity,oldEPOC);
		   var y2 = y2(intensity,oldEPOC);
		   if (y1 > y2)
		   {
		   		deltaEPOCperMin = y1;
		   }
		   else
		   {
		   		deltaEPOCperMin = y2;
		   }
		   System.println("deltaEPOCperMin = " + deltaEPOCperMin);
		   return(deltaEPOCperMin);
	}
*/
	function deltaEPOCperSec(intensity, oldEPOC)
	{
		   var deltaEPOCperSec;
		   var y1 = y1(1, intensity, oldEPOC);
		   var y2 = y2(1, intensity, oldEPOC);
		   if (y1 > y2)
		   {
		   		deltaEPOCperSec = y1;
		   }
		   else
		   {
		   		deltaEPOCperSec = y2;
		   }
		   System.println("deltaEPOCperSec = " + deltaEPOCperSec);
		   return(deltaEPOCperSec);
	}


/*
	function setupField(session)
	{
		EPOC_Field.session.createField("EPOC", EPOC_Field_id, FitContributor.DATA_TYPE_FLOAT, { :mesgType=>Fit.MESG_TYPE_RECORD, :units=>"ml/kg" });
	}
*/
}
